When would you want to use a remote repository rather than keeping all 
your work local?
	When you are working along with other people, having a remote 
repository will help them access the changes that you make, without them having to physically copy files and commit history from your local computer.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	You might want to review any changes that some other contributor has made before you pull it onto your local computer. So it makes sense to have manual pulling rather than automatic.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	A fork is used to create a copy of somebody's repository on GitHub in your own GitHub account. You would use it when you want to contribute to somebody else's project or when you want to use their project (possibly with some modifications) for some work of your own.
Clones are the copies of GitHub repositories, or repositories on your local computer, copied onto your local computer. You would clone a repository so that you can make changes to it locally.
A branch is a label given to a commit. You would create a branch when you want to make a different version of your project and you want to retain both the old and new versions and work on both simultaneously.

What is the benefit of having a copy of the last known state of the remote stored locally?
	When you have a copy of the last known state of the remote stored locally, you can fetch the changes made by others on GitHub and keep them aside in your local computer while you work on making your own edits. The different commits can then be merged together.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	I would probably use email or Google Drive to collaborate without using Git or GitHub. Which one is easier depends on how many changes you make to your project. If it is a report or similar where you and your teammates are adding to different sections of the file, it would be easier to just email your part of the report to the person who will compile it, as it is unlikely that you will revert back to an older version (which, well, is recoverable but not as easily as it is on Git). But when you're working on something that involves coding, using Git and GitHub is a better, simpler option, especially once you get the hang of it.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	When you want to work on different modules of a project, it makes sense to have different branches. When you don't have a very complex problem to solve, it's just simpler to use only master branch. 